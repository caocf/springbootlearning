##
## Log
##
logging.file=${logging.path}/${project.build.finalName}.log
logging.level.org.springframework.web=${logging.level}
logging.level.org.springframework.aop=${logging.level}
logging.level.com.sos.portal=${logging.level}
logging.level.org.springframework.data=${logging.level}
#logging.level.org.springframework.orm=${logging.level}
#logging.level.org.hibernate=${logging.level}


##
## Spring AOP
##
spring.aop.auto=true
spring.aop.proxy-target-class=false

#
# Data Source setting
#
datasource.jndis[0].name=jdbc/FleetPool
datasource.jndis[0].id=fleetDataSource
datasource.jndis[0].default=true

##
## JPA
##
spring.jpa.show-sql=${jpa.showsql}
#spring.jpa.properties.hibernate.show_sql=${jpa.showsql}
spring.jpa.properties.hibernate.format_sql=true

##
## Restful
##
ws.baseUrl=${ws.baseUrl}
ws.sendMail=${ws.baseUrl}/email/send
#
# Email setting
#

email.sendNoticeEnabled=${email.sendNoticeEnabled}
email.sendSuccessEnabled=${email.sendSuccessEnabled}
email.sendFormAddress=${email.sendFormAddress}
email.sendErrorToAddress=${email.sendErrorToAddress}
email.sendNoticeToAddress=${email.sendNoticeToAddress}
email.sendSubjectFormat=Scheduler - {0} - {1} - ${env}

#
# Scheduler setting
#

#Basic Configuration
#Load Source Count for per-time.
scheduler.batchCount=2000
#Set after any times to rerun.
scheduler.rerunTimes=1
#Test Scheduler
scheduler.testDateEnable=false
scheduler.testFromDate=2015-11-13 00:00:00
scheduler.testToDate=2015-11-20 16\:50\:00
scheduler.concurrent=true
#task format scheduler.[taskName].property
scheduler.modify.enable=false
scheduler.modify.sql=select * from T_SCHEDULER_FAILURE_LOG
scheduler.modify.cron=0 37 20 * * ?

scheduler.telemetry.enable=true
scheduler.telemetry.loadSourceSql=${scheduler.telemetry.loadSourceSql}
scheduler.telemetry.cron=0 */10 * * * ?
